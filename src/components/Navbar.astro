---
interface Props {
    mode: string;
}

const { mode } = Astro.props;


const BLACK = 'black'
const WHITE = 'white'


const bgClass = mode === BLACK ? "bg-[#000]" : 'bg-[#fff]';
const fontColorClass = mode === BLACK ? "text-white" : "text-black";
const logoIcon = mode === BLACK ? "/assets/logos/small-logo.svg" : "/assets/logos/small-logo-black.svg";

const menu = [
    {
        title:  "služby",
        href: "/#services"
    },
    {
        title: "naše práce",
        href: "/nase-prace"
    },
    {
        title: "Naša cesta",
        href:"/#about"
    },
    {
        title: "Kontakt",
        href: "/contact"
    }
]
---


<nav class:list={[bgClass, "bg-opacity-50"]} id="navbar">
    <div
        class="container flex justify-between items-center lg:gap-20 gap-10 lg:py-4 py-2 mx-auto px-4"
    >
        <a href="/">
            <img src={logoIcon} alt="logo schulz concept" class="h-6 object-contain"/>
        </a>

        <div class="flex-grow gap-10 justify-center hidden lg:flex">
            {menu.map((item) => (
                    <a
                            class=`flex-grow-0 flex-shrink-0 text-md text-center uppercase ${fontColorClass}` href={item.href}
                    >
                        {item.title}
                    </a>
            ))}

        </div>

        <div class="hamburger lg:hidden z-50" id="nav-button">
            <svg class=`ham ham3 ${mode===BLACK ? "stroke-[#fff]" : "stroke-[#000]" }` viewBox="0 0 100 100" width="40" id="ham-icon">
                <path
                        class="line top"
                        d="m 70,33 h -40 c -11.092231,0 11.883874,13.496726 -3.420361,12.956839 -0.962502,-2.089471 -2.222071,-3.282996 -4.545687,-3.282996 -2.323616,0 -5.113897,2.622752 -5.113897,7.071068 0,4.448316 2.080609,7.007933 5.555839,7.007933 2.401943,0 2.96769,-1.283974 4.166879,-3.282995 2.209342,0.273823 4.031294,1.642466 5.857227,-0.252538 v -13.005715 16.288404 h 7.653568" />
                <path
                        class="line middle"
                        d="m 70,50 h -40 c -5.6862,0 -8.534259,5.373483 -8.534259,11.551069 0,7.187738 3.499166,10.922274 13.131984,10.922274 11.021777,0 7.022787,-15.773343 15.531095,-15.773343 3.268142,0 5.177031,-2.159429 5.177031,-6.7 0,-4.540571 -1.766442,-7.33533 -5.087851,-7.326157 -3.321409,0.0092 -5.771288,2.789632 -5.771288,7.326157 0,4.536525 2.478983,6.805271 5.771288,6.7" />
                <path
                        class="line bottom"
                        d="m 70,67 h -40 c 0,0 -3.680675,0.737051 -3.660714,-3.517857 0.02541,-5.415597 3.391687,-10.357143 10.982142,-10.357143 4.048418,0 17.88928,0.178572 23.482143,0.178572 0,2.563604 2.451177,3.403635 4.642857,3.392857 2.19168,-0.01078 4.373905,-1.369814 4.375,-3.392857 0.0011,-2.023043 -1.924401,-2.589191 -4.553571,-4.107143 -2.62917,-1.517952 -4.196429,-1.799562 -4.196429,-3.660714 0,-1.861153 2.442181,-3.118811 4.196429,-3.035715 1.754248,0.0831 4.375,0.890841 4.375,3.125 2.628634,0 6.160714,0.267857 6.160714,0.267857 l -0.178571,-2.946428 10.178571,0 -10.178571,0 v 6.696428 l 8.928571,0 -8.928571,0 v 7.142858 l 10.178571,0 -10.178571,0" />
            </svg>
        </div>

        <div class="hidden lg:block">
            <a href="/contact">
                <p
                        class=`text-xl text-center uppercase ${fontColorClass}`
                >
                    Napíš&nbsp;nám
                </p>
                <img src="/assets/decorations/underline.svg" alt="underline" class="w-full"/>

            </a>
        </div>
    </div>

    
</nav>

<div class="mobile-menu-content fixed top-0 left-0 w-[100vw] h-[100vh] bg-dark-600 z-20 flex flex-col justify-center position-relative translate-x-full transition overflow-x-hidden">
    <ul class="w-full mx-auto text-white text-4xl px-4">
        {menu.map((item) => (
            <li class="my-12 hover:scale-125 text-center"><a class="py-2 cursor-pointer uppercase inline" data-text={item.title} href={item.href}>{item.title}</a></li>
        ))}
    </ul>

    <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 -z-10 text-white text-[100px] opacity-5 text-center font-bold">
        <p>SCHULZ</p>
        <p>CONCEPT</p>
    </div>
</div>

<style>

    #navbar {
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 1000;
        backdrop-filter: blur(10px);
        /* Additional styles e.g., adding a light background color so the blur is more noticeable */
        //background-color: rgba(0, 0, 0, 0.6);
    }

    .ham {
        cursor: pointer;
        -webkit-tap-highlight-color: transparent;
        transition: transform 400ms;
        -moz-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
    .hamRotate.active {
        transform: rotate(45deg);
    }
    .hamRotate180.active {
        transform: rotate(180deg);
    }
    .line {
        fill:none;
        transition: stroke-dasharray 400ms, stroke-dashoffset 400ms;
        stroke-width:5.5;
        stroke-linecap:round;
    }
    .ham3 .top {
        stroke-dasharray: 40 130;
    }
    .ham3 .middle {
        stroke-dasharray: 40 140;
    }
    .ham3 .bottom {
        stroke-dasharray: 40 205;
    }
    .ham3.active .top {
        stroke-dasharray: 75 130;
        stroke-dashoffset: -63px;
    }
    .ham3.active .middle {
        stroke-dashoffset: -102px;
    }
    .ham3.active .bottom {
        stroke-dasharray: 110 205;
        stroke-dashoffset: -86px;
    }

    ul, li, a {
        transition: ease 0.5s;
        letter-spacing: 6px;
    }
    ul:has(li:hover) li a {
        opacity: 0;
    }

    ul li a:hover {
        opacity: 1 !important;
    }



    ul li:hover a::before {
        opacity: 0.05;
        letter-spacing: 0;
    }

</style>

<script>
    const toggleMenu = () => {
        document.querySelector('.mobile-menu-content').classList.toggle('translate-x-full');
        document.querySelector('#ham-icon').classList.toggle('active');
        document.querySelector('body').classList.toggle("fixed");
    }

    document.getElementById('nav-button').addEventListener('click', function() {
        toggleMenu();
    })

    document.getElementsByClassName('mobile-menu-content')[0].addEventListener('click', function() {
        toggleMenu();
    })

    window.addEventListener("scroll", function() {
        let navbar = document.getElementById("navbar");
        let sticky = navbar.offsetTop;

        if (window.pageYOffset >= sticky) {
            navbar.classList.add("sticky");
        } else {
            navbar.classList.remove("sticky");
        }
    });


</script>