---
import { useTranslatedPath, useTranslations } from "../i18n/utils";
import { getLangFromUrl } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatedPath = useTranslatedPath(lang);
---

<div class="container mx-auto lg:px-12 px-4">
  <div
    class="flex flex-col lg:flex-row justify-between py-8 mt-4 mb-4 lg:mt-16 lg:mb-32 relative z-10"
  >
    <div class="lg:py-8 py-2 z-10" data-aos="fade-right">
      <p
        class="lg:text-left uppercase text-white text-center py-4 text-lg hidden lg:block"
      >
        SCHULZ CONCEPT
      </p>
      <p
        class="lg:text-left text-center text-white text-4xl lg:text-6xl lg:pb-80 pt-12 lg:pt-0 !leading-[1.2em] font-bold"
        set:html={t("hero.title")}
      />
    </div>
    <div class="flex flex-col justify-end z-0" data-aos="fade-left">
      <p
        class="text-center lg:text-right text-white lg:text-[33px] text-lg pt-4 pb-12 lg:py-0 leading-normal"
        set:html={t("hero.subtitle")}
      />
      />
    </div>

    <!-- LOGO S -->
    <img
      id="hero-img"
      src="/assets/logos/logo.svg"
      class="lg:absolute lg:top-1/2 lg:left-1/2 lg:-translate-x-1/2 lg:-translate-y-1/2 lg:h-[550px] h-80 lg:pt-16 -z-10"
      alt="logo schulz concept"
    />
    <!--<svg viewBox="0 0 627 642" fill="none" xmlns="http://www.w3.org/2000/svg" class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-0 lg:h-96  h-60">-->
    <!--    <path class="line-animation" d="M153.815 204.895V246.714V297.399H203.888V246.714H573.928V588.813H53.0724V539.59H3V639H10.213H53.0724H624V631.771V588.813V246.714V224.078V196.526H153.815V204.895Z" stroke="#000AFF" stroke-width="5" stroke-miterlimit="10"/>-->
    <!--    <path class="line-animation" d="M3 3V10.2296V53.1875V395.286V417.922V445.474H473.185V437.099V395.286V344.595H423.113V395.286H53.0724V53.1875H573.928V102.41H624V53.1875V9.90589V3H3Z" stroke="#000AFF" stroke-width="5" stroke-miterlimit="10"/>-->
    <!--</svg>-->
  </div>

  <div
    class="grid lg:grid-cols-4 grid-cols-2 justify-between gap-20 px-10 lg:px-0"
  >
    <img
      src="/assets/images/tk-medical.png"
      alt=""
      class="h-24 w-24 object-contain"
    />
    <img
      src="/assets/images/nespor.png"
      alt=""
      class="h-24 w-32 object-contain"
    />
    <img
      src="/assets/images/pk-machinery.png"
      alt=""
      class="h-24 w-36 object-contain"
    />
    <div class="flex flex-col justify-center">
      <a href={translatedPath("/contact")}>
        <p
          class="text-center text-white/40 text-md font-bold uppercase"
          set:html={t("hero.want-to-be-next")}
        />
        <!--<img src="assets/decorations/underline.svg" alt="decoration of text" class="w-full"/>-->
      </a>
    </div>
  </div>
</div>

<style>
  .line-animation {
    stroke-dasharray: 3500;
    stroke-dashoffset: 3500;
    animation: dash 4s linear forwards;
  }

  @keyframes dash {
    to {
      stroke-dashoffset: 0;
    }
  }
</style>

<script>
  const sources = [
    "/assets/logos/logo.svg",
    "/assets/logos/logo-2.svg",
    "/assets/logos/logo-3.svg",
  ];
  let i = 0;
  setInterval(function () {
    document.getElementById("hero-img").src = sources[i];
    i++;
    if (i == sources.length) {
      i = 0;
    }
  }, 1000);

  window.addEventListener("scroll", function () {
    if (window.innerWidth < 1024) return;
    let scaleImage = document.getElementById("hero-img");
    let scrollPosition = window.scrollY;
    let scaleValue = 1 + scrollPosition / 1000;

    // Get current transform value
    let currentTransform = window.getComputedStyle(scaleImage).transform;

    // Construct a new transform value, preserving existing transforms
    let newTransform = `scale(${scaleValue})`;

    if (currentTransform && currentTransform !== "none") {
      newTransform = "translate(-50%, -50%) " + newTransform;
    }

    // Apply the new transform value
    scaleImage.style.transform = newTransform;
  });
</script>
